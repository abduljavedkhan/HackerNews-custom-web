generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  username    String        @unique
  password    String
  email       String        @unique
  firstname   String
  lastname    String?
  role        String
  isActive    Boolean
  isVerified  Boolean       @default(false)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  Comment     Comment[]
  Like        Like[]        @relation("LikeTousers")
  Post_master Post_master[]

  @@map("users")
}

model Post_master {
  id               Int       @id @default(autoincrement())
  type             String
  title            String
  imageUrl         String?
  postUrl          String?
  description      String?
  votes            Int       @default(0)
  userId           Int?
  isActive         Boolean   @default(true)
  deletedByAdmin   Boolean   @default(false)
  deletedByUser    Boolean   @default(false)
  adminDeletedDate DateTime?
  userDeletedDate  DateTime?
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  user             User?     @relation(fields: [userId], references: [id])
  Comment          Comment[]

  @@index([userId], name: "userId")
}

model Comment {
  id          Int          @id @default(autoincrement())
  parentId    Int
  level       Int          @default(1)
  votes       Int          @default(0)
  text        String
  userId      Int?
  createdAt   DateTime     @default(now()) @map("created_at")
  postId      Int?
  post_master Post_master? @relation(fields: [postId], references: [id])
  user        User?        @relation(fields: [userId], references: [id])

  @@index([postId], name: "postId")
  @@index([userId], name: "userId")
}

model Like {
  id         Int      @id @default(autoincrement())
  parentId   Int
  userId     Int
  created_at DateTime @default(now())
  users      User     @relation("LikeTousers", fields: [userId], references: [id])

  @@index([userId], name: "userId")
}
